import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException; 
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author user
 */
public class TopReportView extends javax.swing.JFrame {
    public static Connection con = null; 
    public static Statement st = null; 
    public static ResultSet rs;

    /**
     * Creates new form TopReportView
     */
    public TopReportView() {
        initComponents();
        setLocationRelativeTo(null);
        koneksimysql();
        tampiltabel();
    }
    

    public void koneksimysql(){
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/db_tubespbo", "root", "");
            st = con.createStatement();
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this,"Connection Failed!");
        }
    }
    DefaultTableModel tb;
    public void tampiltabel(){
        DefaultTableModel tb = new DefaultTableModel();
        tb.addColumn("OrderId");
        tb.addColumn("Username");
        tb.addColumn("TotalPayment");
        tb.addColumn("OrderStatus");
        tb.addColumn("PaymentStatus");
        tb.addColumn("Date");
        tb.addColumn("PhoneNumber");
        tableOrder.setModel(tb); 
        
        try{
            String sql = ("SELECT orderid, tb_OrderTop.username, TotalPayment, orderstatus, PaymentStatus, orderdate, tb_register.`PhoneNumber` FROM tb_orderTop JOIN tb_register ON tb_register.username=tb_orderTop.`Username`;");           
            rs = st.executeQuery(sql);
            while (rs.next()){
                tb.addRow(new Object[]{
                    rs.getString("OrderId"),
                    rs.getString("Username"),
                    rs.getString("TotalPayment"),
                    rs.getString("OrderStatus"),
                    rs.getString("PaymentStatus"),
                    rs.getString("OrderDate"),
                    rs.getString("PhoneNumber")
                });   
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Failed to show data! " +e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelAccount = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        labelExit = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableOrder = new javax.swing.JTable();
        buttonOS = new javax.swing.JButton();
        buttonPS = new javax.swing.JButton();
        kGradientPanel7 = new keeptoo.KGradientPanel();
        jLabel13 = new javax.swing.JLabel();
        labelBack = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        OrderView = new javax.swing.JButton();
        cbShowOrders = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(730, 430));

        labelAccount.setFont(new java.awt.Font("Mermaid", 0, 18)); // NOI18N
        labelAccount.setText("Account");
        labelAccount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelAccountMouseClicked(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel17.setText("X");

        labelExit.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        labelExit.setText("X");
        labelExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelExitMouseClicked(evt);
            }
        });

        tableOrder.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 12)); // NOI18N
        tableOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Title 1"
            }
        ));
        tableOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableOrderMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableOrder);

        buttonOS.setBackground(new java.awt.Color(255, 255, 255));
        buttonOS.setFont(new java.awt.Font("Mermaid", 0, 14)); // NOI18N
        buttonOS.setText("<html>order by <br>order status");
        buttonOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOSActionPerformed(evt);
            }
        });

        buttonPS.setBackground(new java.awt.Color(255, 255, 255));
        buttonPS.setFont(new java.awt.Font("Mermaid", 0, 14)); // NOI18N
        buttonPS.setLabel("<html>order by <br>payment status ");
        buttonPS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPSActionPerformed(evt);
            }
        });

        kGradientPanel7.setkEndColor(new java.awt.Color(204, 255, 204));
        kGradientPanel7.setkStartColor(new java.awt.Color(0, 36, 16));
        kGradientPanel7.setPreferredSize(new java.awt.Dimension(110, 85));

        jLabel13.setFont(new java.awt.Font("Mermaid", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("<html>Top <br>Order");
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel13MouseClicked(evt);
            }
        });

        labelBack.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        labelBack.setForeground(new java.awt.Color(255, 255, 255));
        labelBack.setText("<<<");
        labelBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelBackMouseClicked(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Mermaid", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(204, 204, 204));
        jLabel14.setText("<html>Bottom<br>Order");
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel14MouseClicked(evt);
            }
        });

        jLabel15.setBackground(new java.awt.Color(204, 204, 204));
        jLabel15.setFont(new java.awt.Font("Mermaid", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(204, 204, 204));
        jLabel15.setText("<html>Top <br>Order<br>Report");
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Mermaid", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(204, 204, 204));
        jLabel16.setText("<html>Bottom <br>Order<br>Report");
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel16MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel7Layout = new javax.swing.GroupLayout(kGradientPanel7);
        kGradientPanel7.setLayout(kGradientPanel7Layout);
        kGradientPanel7Layout.setHorizontalGroup(
            kGradientPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel7Layout.createSequentialGroup()
                .addGroup(kGradientPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelBack))
                    .addGroup(kGradientPanel7Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(kGradientPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        kGradientPanel7Layout.setVerticalGroup(
            kGradientPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel7Layout.createSequentialGroup()
                .addComponent(labelBack)
                .addGap(41, 41, 41)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        OrderView.setBackground(new java.awt.Color(255, 255, 255));
        OrderView.setFont(new java.awt.Font("Mermaid", 0, 18)); // NOI18N
        OrderView.setLabel("<html>order<br>view >>>");
        OrderView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrderViewActionPerformed(evt);
            }
        });

        cbShowOrders.setFont(new java.awt.Font("Mermaid", 0, 14)); // NOI18N
        cbShowOrders.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Show Orders", "Unpaid Orders", "Paid Orders", "Completed Orders", "On Proceed Orders", "Cancelled Orders" }));
        cbShowOrders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbShowOrdersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(kGradientPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(598, 598, 598)
                        .addComponent(labelExit, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(167, 167, 167)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 591, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(627, 627, 627)
                                .addComponent(labelAccount))
                            .addComponent(cbShowOrders, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(buttonOS)
                                    .addComponent(buttonPS, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE))
                                .addGap(335, 335, 335)
                                .addComponent(OrderView, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(labelExit))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(labelAccount)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cbShowOrders, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonPS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonOS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(OrderView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 730, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void labelAccountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelAccountMouseClicked
        // TODO add your handling code here:
        Account acc= new Account();
        acc.setVisible(true);
        dispose();
    }//GEN-LAST:event_labelAccountMouseClicked

    private void labelExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelExitMouseClicked
        System.exit(0);
    }//GEN-LAST:event_labelExitMouseClicked

    private void tableOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableOrderMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_tableOrderMouseClicked

    private void jLabel13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseClicked
        new TopOrderView().setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel13MouseClicked

    private void labelBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelBackMouseClicked
        DashboardAdmin da= new DashboardAdmin();
        da.setVisible(true);
        dispose();
    }//GEN-LAST:event_labelBackMouseClicked

    private void jLabel14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseClicked
        new BottomReportView().setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel14MouseClicked

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        TopOrder a= new TopOrder();
        a.setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel15MouseClicked

    private void jLabel16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseClicked
        BottomOrder a= new BottomOrder();
        a.setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel16MouseClicked

    private void buttonOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOSActionPerformed
    DefaultTableModel tb = new DefaultTableModel();
        tb.addColumn("OrderId");
        tb.addColumn("Username");
        tb.addColumn("TotalPayment");
        tb.addColumn("OrderStatus");
        tb.addColumn("PaymentStatus");
        tb.addColumn("Date");
        tb.addColumn("PhoneNumber");
        tableOrder.setModel(tb); 
        
        try{
            String sql = ("SELECT orderid, tb_OrderTop.username, TotalPayment, orderstatus, PaymentStatus, orderdate, tb_register.`PhoneNumber` FROM tb_orderTop JOIN tb_register ON tb_register.username=tb_orderTop.`Username` order by orderstatus;");           
            rs = st.executeQuery(sql);
            while (rs.next()){
                tb.addRow(new Object[]{
                    rs.getString("OrderId"),
                    rs.getString("Username"),
                    rs.getString("TotalPayment"),
                    rs.getString("OrderStatus"),
                    rs.getString("PaymentStatus"),
                    rs.getString("OrderDate"), 
                    rs.getString("PhoneNumber")
                });   
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Failed to show data! " +e.getMessage());
        }
    }//GEN-LAST:event_buttonOSActionPerformed

    private void buttonPSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPSActionPerformed
    DefaultTableModel tb = new DefaultTableModel();
        tb.addColumn("OrderId");
        tb.addColumn("Username");
        tb.addColumn("TotalPayment");
        tb.addColumn("OrderStatus");
        tb.addColumn("PaymentStatus");
        tb.addColumn("Date");
        tb.addColumn("PhoneNumber");
        tableOrder.setModel(tb); 
        
        try{
            String sql = ("SELECT orderid, tb_OrderTop.username, TotalPayment, orderstatus, PaymentStatus, orderdate, tb_register.`PhoneNumber` FROM tb_orderTop JOIN tb_register ON tb_register.username=tb_orderTop.`Username` order by paymentstatus;");           
            rs = st.executeQuery(sql);
            while (rs.next()){
                tb.addRow(new Object[]{
                    rs.getString("OrderId"),
                    rs.getString("Username"),
                    rs.getString("TotalPayment"),
                    rs.getString("OrderStatus"),
                    rs.getString("PaymentStatus"),
                    rs.getString("OrderDate"),
                    rs.getString("PhoneNumber")
                });   
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Failed to show data! " +e.getMessage());
        }
    }//GEN-LAST:event_buttonPSActionPerformed

    private void OrderViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrderViewActionPerformed
        // TODO add your handling code here:
        TopOrderView a= new TopOrderView();
        a.setVisible(true);
        dispose();
    }//GEN-LAST:event_OrderViewActionPerformed

    private void cbShowOrdersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbShowOrdersActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tb = new DefaultTableModel();
        tb.addColumn("OrderId");
        tb.addColumn("Username");
        tb.addColumn("TotalPayment");
        tb.addColumn("OrderStatus");
        tb.addColumn("PaymentStatus");
        tb.addColumn("Date");
        tb.addColumn("PhoneNumber");
        tableOrder.setModel(tb);

        try{
            if(cbShowOrders.getSelectedItem()=="Unpaid Orders"){
                String sql = ("SELECT orderid, tb_OrderTop.username, TotalPayment, orderstatus, PaymentStatus, orderdate, tb_register.`PhoneNumber` FROM tb_orderTop JOIN tb_register ON tb_register.username=tb_orderTop.`Username` where PaymentStatus='Unpaid';");
                rs = st.executeQuery(sql);
            }
            else if (cbShowOrders.getSelectedItem()=="Paid Orders"){
                String sql = ("SELECT orderid, tb_OrderTop.username, TotalPayment, orderstatus, PaymentStatus, orderdate, tb_register.`PhoneNumber` FROM tb_orderTop JOIN tb_register ON tb_register.username=tb_orderTop.`Username` where PaymentStatus='Paid';");
                rs = st.executeQuery(sql);
            }
            else if (cbShowOrders.getSelectedItem()=="On Proceed Orders"){
                String sql = ("SELECT orderid, tb_OrderTop.username, TotalPayment, orderstatus, PaymentStatus, orderdate, tb_register.`PhoneNumber` FROM tb_orderTop JOIN tb_register ON tb_register.username=tb_orderTop.`Username` where OrderStatus='To be proceed';");
                rs = st.executeQuery(sql);
            }
            else if (cbShowOrders.getSelectedItem()=="Completed Orders"){
                String sql = ("SELECT orderid, tb_OrderTop.username, TotalPayment, orderstatus, PaymentStatus, orderdate, tb_register.`PhoneNumber` FROM tb_orderTop JOIN tb_register ON tb_register.username=tb_orderTop.`Username` where OrderStatus='Completed';");
                rs = st.executeQuery(sql);
            }
            else if (cbShowOrders.getSelectedItem()=="Cancelled Orders"){
                String sql = ("SELECT orderid, tb_OrderTop.username, TotalPayment, orderstatus, PaymentStatus, orderdate, tb_register.`PhoneNumber` FROM tb_orderTop JOIN tb_register ON tb_register.username=tb_orderTop.`Username` where OrderStatus='Cancelled';");
                rs = st.executeQuery(sql);
            }
            else if (cbShowOrders.getSelectedItem()=="Show Orders"){
                String sql = ("SELECT orderid, tb_OrderTop.username, TotalPayment, orderstatus, PaymentStatus, orderdate, tb_register.`PhoneNumber` FROM tb_orderTop JOIN tb_register ON tb_register.username=tb_orderTop.`Username`;");
                rs = st.executeQuery(sql);
            }
            while (rs.next()){
                tb.addRow(new Object[]{
                    rs.getString("OrderId"),
                    rs.getString("Username"),
                    rs.getString("TotalPayment"),
                    rs.getString("OrderStatus"),
                    rs.getString("PaymentStatus"),
                    rs.getString("OrderDate"),
                    rs.getString("PhoneNumber")
                });
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Failed to show data! " +e.getMessage());
        }

    }//GEN-LAST:event_cbShowOrdersActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TopReportView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TopReportView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TopReportView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TopReportView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TopReportView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton OrderView;
    private javax.swing.JButton buttonOS;
    private javax.swing.JButton buttonPS;
    private javax.swing.JComboBox<String> cbShowOrders;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private keeptoo.KGradientPanel kGradientPanel7;
    private javax.swing.JLabel labelAccount;
    private javax.swing.JLabel labelBack;
    private javax.swing.JLabel labelExit;
    private javax.swing.JTable tableOrder;
    // End of variables declaration//GEN-END:variables
}
